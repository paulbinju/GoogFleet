//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GoogFleet.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FleetManagerEntities : DbContext
    {
        public FleetManagerEntities()
            : base("name=FleetManagerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alert_T> Alert_T { get; set; }
        public virtual DbSet<AutoBrand_T> AutoBrand_T { get; set; }
        public virtual DbSet<Bill_T> Bill_T { get; set; }
        public virtual DbSet<BillDetails_T> BillDetails_T { get; set; }
        public virtual DbSet<EmailCampaign_Oman> EmailCampaign_Oman { get; set; }
        public virtual DbSet<FleetCompany_T> FleetCompany_T { get; set; }
        public virtual DbSet<Insurance_T> Insurance_T { get; set; }
        public virtual DbSet<SalesPerson_T> SalesPerson_T { get; set; }
        public virtual DbSet<ServiceParts_T> ServiceParts_T { get; set; }
        public virtual DbSet<Shop_T> Shop_T { get; set; }
        public virtual DbSet<Subscription_T> Subscription_T { get; set; }
        public virtual DbSet<TrafficContraventions_T> TrafficContraventions_T { get; set; }
        public virtual DbSet<User_T> User_T { get; set; }
        public virtual DbSet<Vehicle_T> Vehicle_T { get; set; }
        public virtual DbSet<VehicleGroup_T> VehicleGroup_T { get; set; }
        public virtual DbSet<Vehicle_Insurance_T> Vehicle_Insurance_T { get; set; }
        public virtual DbSet<VehicleRegistration_T> VehicleRegistration_T { get; set; }
        public virtual DbSet<VehicleType_T> VehicleType_T { get; set; }
        public virtual DbSet<Vehicle_User_T> Vehicle_User_T { get; set; }
        public virtual DbSet<EmailCampaign_Australia> EmailCampaign_Australia { get; set; }
        public virtual DbSet<EmailCampaign_CargoME> EmailCampaign_CargoME { get; set; }
        public virtual DbSet<EmailCampaign_RentACarME> EmailCampaign_RentACarME { get; set; }
    
        public virtual ObjectResult<string> vehiclegroupname(Nullable<int> fleetCompanyID, Nullable<int> vehicleGroupID)
        {
            var fleetCompanyIDParameter = fleetCompanyID.HasValue ?
                new ObjectParameter("FleetCompanyID", fleetCompanyID) :
                new ObjectParameter("FleetCompanyID", typeof(int));
    
            var vehicleGroupIDParameter = vehicleGroupID.HasValue ?
                new ObjectParameter("VehicleGroupID", vehicleGroupID) :
                new ObjectParameter("VehicleGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("vehiclegroupname", fleetCompanyIDParameter, vehicleGroupIDParameter);
        }
    }
}
